before_script:
  - "bin/rake neo4j:install[$NEO4J_VERSION] --trace"
  - "bin/rake neo4j:config[development,7474] --trace"
  - "if [ -f ./db/neo4j/development/conf/neo4j-wrapper.conf ]; then WRAPPER=-wrapper; fi"
  - "echo 'dbms.memory.pagecache.size=600m' >> ./db/neo4j/development/conf/neo4j.conf"
  - "echo 'dbms.memory.heap.max_size=600' >> ./db/neo4j/development/conf/neo4j$WRAPPER.conf"
  - "echo 'dbms.memory.heap.initial_size=600' >> ./db/neo4j/development/conf/neo4j$WRAPPER.conf"
  - "bin/rake neo4j:start --trace"
  - "sleep 20"
script:
  - "travis_retry bin/rake default --trace"
language: ruby
cache: bundler
sudo: false
jdk: oraclejdk8
rvm:
  - 2.3.1
  - 2.2.5
  - jruby-9.1.12.0
env:
  global:
    - JRUBY_OPTS="-J-Xmx1280m -Xcompile.invokedynamic=false -J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1 -J-noverify -Xcompile.mode=OFF"
  matrix:
    - NEO4J_URL="http://localhost:7474" NEO4J_VERSION=community-3.1.5
    - NEO4J_URL="http://localhost:7474" NEO4J_VERSION=community-3.2.1
    - NEO4J_URL="bolt://localhost:7472" NEO4J_VERSION=community-3.1.5
    - NEO4J_URL="bolt://localhost:7472" NEO4J_VERSION=community-3.2.1
matrix:
  include:
    - rvm: 2.3.1
      jdk:
      before_script:
      script: "bundle exec rubocop"
      env: "RUBOCOP=true"

    # Older versions of Neo4j with latest version of Ruby
    - rvm: 2.3.1
      env: NEO4J_VERSION=community-2.3.11

    # Older versions of Neo4j with latest version of jRuby
    - rvm: jruby-9.1.12.0
      env: NEO4J_VERSION=community-2.3.11

    # Enterprise
    - rvm: 2.3.1
      env: NEO4J_URL="http://localhost:7474" NEO4J_VERSION=enterprise-3.2.1

  allow_failures:
    # Fix most likely coming in neo4j 3.2.2
    - rvm: 2.3.1
      env: NEO4J_URL="http://localhost:7474" NEO4J_VERSION=enterprise-3.2.1


